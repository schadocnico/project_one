version: '3'

services:
  reverseproxy:
    image: nginx:1.25.1
    container_name: nginxrp
    depends_on:
      - api
      - database
    volumes:
      - ./nginx/core.conf:/etc/nginx/conf.d/core.conf
      - ./nginx/reverseproxy.conf:/etc/nginx/conf.d/reverseproxy.conf
      - ./nginx/db1.conf:/etc/nginx/conf.d/db1.conf
      - ./nginx/api1.conf:/etc/nginx/conf.d/api1.conf
      - ./nginx/html:/var/www/html
    ports:
      - "80:80"
      - "443:443"
  api:
    build: ./api/
    container_name: backend
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - database
    environment:
      DB_USER: 'postgres'
      DB_PASSWORD: 'example'
      DB_PORT: '3007'
      DB_NAME: 'example'
      DB_HOST: host.docker.internal
      CORS_PORT: '8080'
      CORS_ORIGIN: host.docker.internal
      API_PORT: '8081'
    
  database:
    image: postgres:16.2
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD=example
    ports:
      - 3007:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data: